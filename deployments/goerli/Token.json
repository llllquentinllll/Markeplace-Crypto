{
  "address": "0xaC4974B0B1324Ced62861EC3D444754E1Ca1d54A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkPriceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "receiveLink",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getBalanceInLink",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceInUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiveLinkTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd0b56bc3795a284539fd36e276f5bc2a07cd4481cd4ed0962cac46af23471e37",
  "receipt": {
    "to": null,
    "from": "0xD9aaEf7153D171da4618BF3AF21fEf6E73849dd1",
    "contractAddress": "0xaC4974B0B1324Ced62861EC3D444754E1Ca1d54A",
    "transactionIndex": 35,
    "gasUsed": "622759",
    "logsBloom": "0x
    "blockHash": "0x14a20f82c902d4d2edf5606c62d1be69af67bc3988589443375713158f00a486",
    "transactionHash": "0xd0b56bc3795a284539fd36e276f5bc2a07cd4481cd4ed0962cac46af23471e37",
    "logs": [],
    "blockNumber": 8566581,
    "cumulativeGasUsed": "2597442",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x48731cF7e84dc94C5f84577882c14Be11a5B7456"
  ],
  "numDeployments": 6,
  "solcInputHash": "fe563c304c59b25726d267cf374837e0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkPriceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"receiveLink\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getBalanceInLink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveLinkTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/Token.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror Raffle__SendMoreToBeScam();\\n\\ncontract Token {\\n    event receiveLink(address indexed player);\\n\\n    // Variables\\n    uint256 private constant PRICE_LINK_FEE = 5e15; // = 0.005\\n\\n    uint256 private s_balanceInLink = 1;\\n    uint256 private s_balanceInUsd = 0;\\n    AggregatorV3Interface private s_linkPriceFeedAddress;\\n\\n    // Adresse du contrat LINK\\n    address public linkTokenAddress = 0x326C977E6efc84E512bB9C30f76E30c160eD06FB;\\n\\n    constructor(address linkPriceFeedAddress) {\\n        s_linkPriceFeedAddress = AggregatorV3Interface(linkPriceFeedAddress);\\n    }\\n\\n    function receiveLinkTokens() public {\\n        // V\\u00e9rifier que le contrat LINK est approuv\\u00e9 pour transf\\u00e9rer des tokens\\n        require(\\n            IERC20(linkTokenAddress).allowance(msg.sender, address(this)) >= PRICE_LINK_FEE,\\n            \\\"Tokens must be approved before calling this function\\\"\\n        );\\n\\n        // Transf\\u00e9rer les tokens LINK du portefeuille de l'appelant au contrat de la fonction\\n        require(\\n            IERC20(linkTokenAddress).transferFrom(msg.sender, address(this), PRICE_LINK_FEE),\\n            \\\"Token transfer failed\\\"\\n        );\\n\\n        // Convertir le prix LINK/USD en utilisant l'oracle de prix\\n        uint256 price = getPrice(AggregatorV3Interface(s_linkPriceFeedAddress));\\n\\n        s_balanceInLink = s_balanceInLink + PRICE_LINK_FEE;\\n        s_balanceInUsd = s_balanceInUsd + (price * PRICE_LINK_FEE);\\n\\n        emit receiveLink(msg.sender);\\n    }\\n\\n    // Fonction utilitaire pour convertir le prix LINK/USD\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        // Convertir le prix en 18 d\\u00e9cimales pour que ce soit lisible par ether\\n        return uint256(answer) * 10 ** 10;\\n    }\\n\\n    function getBalanceInLink() public view returns (uint256) {\\n        return s_balanceInLink;\\n    }\\n\\n    function getBalanceInUsd() public view returns (uint256) {\\n        return s_balanceInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb13a2e0184dab29cf3f8f0986c9805c6f8d1cdd516512a78d25cdc006f3a23ee\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526001600055600060015573326c977e6efc84e512bb9c30f76e30c160ed06fb600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006f57600080fd5b50604051610a72380380610a72833981810160405281019061009191906100ed565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610168565b6000815190506100e781610151565b92915050565b6000602082840312156101035761010261014c565b5b6000610111848285016100d8565b91505092915050565b60006101258261012c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61015a8161011a565b811461016557600080fd5b50565b6108fb806101776000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063203521861461005157806324c0b1261461006f578063ef124faf1461008d578063fe6b690c146100ab575b600080fd5b6100596100b5565b6040516100669190610679565b60405180910390f35b6100776100bf565b6040516100849190610679565b60405180910390f35b6100956100c8565b6040516100a291906105be565b60405180910390f35b6100b36100ee565b005b6000600154905090565b60008054905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6611c37937e08000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016101539291906105d9565b60206040518083038186803b15801561016b57600080fd5b505afa15801561017f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a391906104b2565b10156101e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101db90610659565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306611c37937e080006040518463ffffffff1660e01b815260040161024a93929190610602565b602060405180830381600087803b15801561026457600080fd5b505af1158015610278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029c9190610485565b6102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d290610639565b60405180910390fd5b6000610308600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610391565b90506611c37937e0800060005461031f91906106a5565b6000819055506611c37937e080008161033891906106fb565b60015461034591906106a5565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167f9f134c02598131fb080de146a189ec1872eb47370d22898214967b10e6da8d8960405160405180910390a250565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156103da57600080fd5b505afa1580156103ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041291906104df565b5050509150506402540be4008161042991906106fb565b915050919050565b60008151905061044081610869565b92915050565b60008151905061045581610880565b92915050565b60008151905061046a81610897565b92915050565b60008151905061047f816108ae565b92915050565b60006020828403121561049b5761049a6107ec565b5b60006104a984828501610431565b91505092915050565b6000602082840312156104c8576104c76107ec565b5b60006104d68482850161045b565b91505092915050565b600080600080600060a086880312156104fb576104fa6107ec565b5b600061050988828901610470565b955050602061051a88828901610446565b945050604061052b8882890161045b565b935050606061053c8882890161045b565b925050608061054d88828901610470565b9150509295509295909350565b61056381610755565b82525050565b6000610576601583610694565b9150610581826107f1565b602082019050919050565b6000610599603483610694565b91506105a48261081a565b604082019050919050565b6105b88161079d565b82525050565b60006020820190506105d3600083018461055a565b92915050565b60006040820190506105ee600083018561055a565b6105fb602083018461055a565b9392505050565b6000606082019050610617600083018661055a565b610624602083018561055a565b61063160408301846105af565b949350505050565b6000602082019050818103600083015261065281610569565b9050919050565b600060208201905081810360008301526106728161058c565b9050919050565b600060208201905061068e60008301846105af565b92915050565b600082825260208201905092915050565b60006106b08261079d565b91506106bb8361079d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106f0576106ef6107bd565b5b828201905092915050565b60006107068261079d565b91506107118361079d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561074a576107496107bd565b5b828202905092915050565b60006107608261077d565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b7f546f6b656e73206d75737420626520617070726f766564206265666f7265206360008201527f616c6c696e6720746869732066756e6374696f6e000000000000000000000000602082015250565b61087281610767565b811461087d57600080fd5b50565b61088981610773565b811461089457600080fd5b50565b6108a08161079d565b81146108ab57600080fd5b50565b6108b7816107a7565b81146108c257600080fd5b5056fea2646970667358221220d8145eab4163ed1ffcdbc7d99665fcfc0bc319d74541fc59904de124d995bf8d64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063203521861461005157806324c0b1261461006f578063ef124faf1461008d578063fe6b690c146100ab575b600080fd5b6100596100b5565b6040516100669190610679565b60405180910390f35b6100776100bf565b6040516100849190610679565b60405180910390f35b6100956100c8565b6040516100a291906105be565b60405180910390f35b6100b36100ee565b005b6000600154905090565b60008054905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6611c37937e08000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016101539291906105d9565b60206040518083038186803b15801561016b57600080fd5b505afa15801561017f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a391906104b2565b10156101e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101db90610659565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306611c37937e080006040518463ffffffff1660e01b815260040161024a93929190610602565b602060405180830381600087803b15801561026457600080fd5b505af1158015610278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029c9190610485565b6102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d290610639565b60405180910390fd5b6000610308600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610391565b90506611c37937e0800060005461031f91906106a5565b6000819055506611c37937e080008161033891906106fb565b60015461034591906106a5565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167f9f134c02598131fb080de146a189ec1872eb47370d22898214967b10e6da8d8960405160405180910390a250565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156103da57600080fd5b505afa1580156103ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041291906104df565b5050509150506402540be4008161042991906106fb565b915050919050565b60008151905061044081610869565b92915050565b60008151905061045581610880565b92915050565b60008151905061046a81610897565b92915050565b60008151905061047f816108ae565b92915050565b60006020828403121561049b5761049a6107ec565b5b60006104a984828501610431565b91505092915050565b6000602082840312156104c8576104c76107ec565b5b60006104d68482850161045b565b91505092915050565b600080600080600060a086880312156104fb576104fa6107ec565b5b600061050988828901610470565b955050602061051a88828901610446565b945050604061052b8882890161045b565b935050606061053c8882890161045b565b925050608061054d88828901610470565b9150509295509295909350565b61056381610755565b82525050565b6000610576601583610694565b9150610581826107f1565b602082019050919050565b6000610599603483610694565b91506105a48261081a565b604082019050919050565b6105b88161079d565b82525050565b60006020820190506105d3600083018461055a565b92915050565b60006040820190506105ee600083018561055a565b6105fb602083018461055a565b9392505050565b6000606082019050610617600083018661055a565b610624602083018561055a565b61063160408301846105af565b949350505050565b6000602082019050818103600083015261065281610569565b9050919050565b600060208201905081810360008301526106728161058c565b9050919050565b600060208201905061068e60008301846105af565b92915050565b600082825260208201905092915050565b60006106b08261079d565b91506106bb8361079d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106f0576106ef6107bd565b5b828201905092915050565b60006107068261079d565b91506107118361079d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561074a576107496107bd565b5b828202905092915050565b60006107608261077d565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b7f546f6b656e73206d75737420626520617070726f766564206265666f7265206360008201527f616c6c696e6720746869732066756e6374696f6e000000000000000000000000602082015250565b61087281610767565b811461087d57600080fd5b50565b61088981610773565b811461089457600080fd5b50565b6108a08161079d565b81146108ab57600080fd5b50565b6108b7816107a7565b81146108c257600080fd5b5056fea2646970667358221220d8145eab4163ed1ffcdbc7d99665fcfc0bc319d74541fc59904de124d995bf8d64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 139,
        "contract": "contracts/Token.sol:Token",
        "label": "s_balanceInLink",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 142,
        "contract": "contracts/Token.sol:Token",
        "label": "s_balanceInUsd",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 145,
        "contract": "contracts/Token.sol:Token",
        "label": "s_linkPriceFeedAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 148,
        "contract": "contracts/Token.sol:Token",
        "label": "linkTokenAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}